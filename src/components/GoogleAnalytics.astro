---
// This component is adapted from @astrolib/analytics (https://github.com/onwidget/astrolib)
// to add support for vanillacookieconsent https://www.npmjs.com/package/vanilla-cookieconsent
import merge from 'lodash.merge';
export interface Props {
  id: string;
  partytown?: boolean;
  vanillacookieconsent?: boolean;
}

const { id = "GA_MEASUREMENT_ID", partytown = false, vanillacookieconsent = true } = Astro.props;

const attrs = merge(
        partytown ? { type: "text/partytown" } : {},
        //vanillacookieconsent ? { type: "text/plain", "data-category": "analytics" } : {}
    )
---

<script is:inline>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('consent', 'default', {
    'analytics_storage': 'denied',
  });
</script>
<script is:inline async src={`https://www.googletagmanager.com/gtag/js?id=${id}`} {...attrs}></script>

<script is:inline define:vars={{ id }} {...attrs}>
  //console.log("Google Analytics is initialising");
  gtag("js", new Date());
  gtag("config", id);
</script>

<script is:inline>
  //import * as CookieConsent from "vanilla-cookieconsent";
  //import { deleteCookies } from "./multiplayer/preferences";

  // declare global {
  //   interface Window { dataLayer: any; }
  // }
  // function gtag(x, y, z){
  //   window.dataLayer.push(arguments);
  // }

  function consent(category) {
    const ls = localStorage.getItem("cookie_consent");
    return ls ? (JSON.parse(ls).categories.indexOf(category) >= 0) : false;
  }

  const deleteCookies = (pattern) => {
    const re = new RegExp(pattern);
    const expires = new Date(Date.now() - 864e5).toUTCString()
    document.cookie.split('; ').forEach((v) => {
        const parts = v.split('=');
        if (re.test(parts[0]))
          document.cookie = parts[0] + '=; expires=' + expires + '; path=/';
    });
  }

  function enforce() {
    const bConsent = consent("analytics");
    const strConsent = bConsent ? "granted" : "denied"; // CookieConsent.acceptedCategory("analytics");
    const gaPerms = {
        analytics_storage: strConsent,
      };
    //console.log("Google Analytics consent updating to: " + JSON.stringify(gaPerms));
    gtag("consent", "update", gaPerms);
    if (!bConsent)
      deleteCookies("^_ga");
  }
  enforce();

  window.addEventListener('cc:onChange', (e) => {
    //if ( (e as any).detail.changedCategories.indexOf("analytics") >= 0 )
    if ( (e).detail.changedCategories.indexOf("analytics") >= 0 )
      enforce();
  });
</script>
